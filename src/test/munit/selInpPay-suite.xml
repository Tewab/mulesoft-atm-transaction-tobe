<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="selInpPay-suite.xml" />
	<munit:test name="selInpPayFlow-positive" doc:id="cfe10be4-e25c-4924-8d43-125c0efbb330" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Select" doc:id="89d959d9-995f-43e6-a070-8218c4588c8a" processor="db:select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="37da41e8-d4f5-4989-8986-c3d78481b8dc" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://selInpPayFlowpositive\mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://selInpPayFlowpositive\mock_variable_.dwl')]" />
						<munit-tools:variable key="unbPaylo" value="#[output application/java --- readUrl('classpath://selInpPayFlowpositive\mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="d002a181-2374-40d1-9186-dcb37c6b8289" >
				<munit:payload value="#[output application/json --- readUrl('classpath://selInpPayFlowpositive\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://selInpPayFlowpositive\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://selInpPayFlowpositive\set-event_variable_.dwl')]" />
					<munit:variable key="unbPaylo" value="#[output application/java --- readUrl('classpath://selInpPayFlowpositive\set-event_variable_1.dwl')]" encoding="UTF-8" mediaType="application/java" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to selInpPayFlow" doc:id="ffc25370-c652-4bee-9415-3a66085954a3" name="selInpPayFlow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="8ff6ba07-4ccb-4028-8d11-575dbbea6071" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import selInpPayFlowpositive::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>

	<munit:test name="selInpPayFlow-error" doc:id="cfe10be4-e25c-4924-8d43-125c0efbb330" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Select" doc:id="89d959d9-995f-43e6-a070-8218c4588c8a" processor="db:select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="37da41e8-d4f5-4989-8986-c3d78481b8dc" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					
					<munit-tools:error typeId="ANY" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://selInpPayFlowpositive\mock_variable_.dwl')]" />
						<munit-tools:variable key="unbPaylo" value="#[output application/java --- readUrl('classpath://selInpPayFlowpositive\mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			
</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="d002a181-2374-40d1-9186-dcb37c6b8289" >
				<munit:payload value="#[output application/json --- readUrl('classpath://selInpPayFlowpositive\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://selInpPayFlowpositive\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://selInpPayFlowpositive\set-event_variable_.dwl')]" />
					<munit:variable key="unbPaylo" value="#[output application/java --- readUrl('classpath://selInpPayFlowpositive\set-event_variable_1.dwl')]" encoding="UTF-8" mediaType="application/java" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution>
			<try doc:name="Try" doc:id="f55f0462-d987-4b42-8caa-9076afc3f4aa" >
				<flow-ref doc:name="Flow-ref to selInpPayFlow" doc:id="ffc25370-c652-4bee-9415-3a66085954a3" name="selInpPayFlow" />
				<error-handler >
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="95e6835f-81f9-48c0-91e9-04bb8781e11b" >
						<logger level="INFO" doc:name="Logger" doc:id="473bf686-908f-4a19-9371-3f323d13c549" message="*********continue*********"/>
					</on-error-continue>
				</error-handler>
			</try>

		</munit:execution>
		<munit:validation>
			<munit-tools:assert-that doc:name="Assert that" doc:id="1fa4fc4a-b444-40a5-8bd9-497327f17b9b" expression="#[error]" is="#[MunitTools::equalTo(error.description)]"/>

		</munit:validation>
	
</munit:test>

</mule>
