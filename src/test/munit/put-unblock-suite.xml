<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="put-unblock-suite.xml" />
	<munit:test name="put-unblockSub_Flow-success" doc:id="083e88d8-794a-4069-90b8-a3f4d38b7fe7" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Update" doc:id="5a3898ac-4443-41f7-9e6b-26f97cab177a" processor="db:update">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="f4857f49-cccd-4231-9af5-09a81b9a3c33" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://putunblockSubFlowsuccess\mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://putunblockSubFlowsuccess\mock_variable_.dwl')]" />
						<munit-tools:variable key="unbPaylo" value="#[output application/java --- readUrl('classpath://putunblockSubFlowsuccess\mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="selInppay" value="#[output application/java --- readUrl('classpath://putunblockSubFlowsuccess\mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock Send" doc:id="f9801768-0e00-423b-a545-f2bec0b544cb" processor="email:send">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="8fa69ffc-3602-4d50-90d6-d5cdfcc3d308" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://putunblockSubFlowsuccess\mock_payload1.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://putunblockSubFlowsuccess\mock_variable_3.dwl')]" />
						<munit-tools:variable key="unbPaylo" value="#[output application/java --- readUrl('classpath://putunblockSubFlowsuccess\mock_variable_4.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="selInppay" value="#[output application/java --- readUrl('classpath://putunblockSubFlowsuccess\mock_variable_5.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock selInpPayFlowReference" doc:id="67851c6c-b569-4951-afb9-81384471c245" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="c50a7445-1353-4cb9-beb7-0dbded4a72ba" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://putunblockSubFlowsuccess\mock_payload2.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://putunblockSubFlowsuccess\mock_variable_6.dwl')]" />
						<munit-tools:variable key="unbPaylo" value="#[output application/java --- readUrl('classpath://putunblockSubFlowsuccess\mock_variable_7.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="selInppay" value="#[output application/java --- readUrl('classpath://putunblockSubFlowsuccess\mock_variable_8.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="5194f7c6-4bca-4747-aebe-1dd7fb04797f" >
				<munit:payload value="#[output application/json --- readUrl('classpath://putunblockSubFlowsuccess\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://putunblockSubFlowsuccess\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://putunblockSubFlowsuccess\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to put-unblockSub_Flow" doc:id="d4aa713b-1f81-4aaf-924f-611b40a0942c" name="put-unblockSub_Flow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="8a01c081-1c40-4e33-a73d-d9d8e1266164" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import putunblockSubFlowsuccess::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="put-unblockSub_Flow-active" doc:id="a3b53103-1a13-455d-81c8-22bc2d907886" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock selInpPayFlowReference" doc:id="cfdaa431-0041-4a07-85d8-7a9993693634" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="c50a7445-1353-4cb9-beb7-0dbded4a72ba" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://putunblockSubFlowactive\mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://putunblockSubFlowactive\mock_variable_.dwl')]" />
						<munit-tools:variable key="unbPaylo" value="#[output application/java --- readUrl('classpath://putunblockSubFlowactive\mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="selInppay" value="#[output application/java --- readUrl('classpath://putunblockSubFlowactive\mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="508aa263-6e65-478d-a017-d1c485cee2d1" >
				<munit:payload value="#[output application/json --- readUrl('classpath://putunblockSubFlowactive\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://putunblockSubFlowactive\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://putunblockSubFlowactive\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to put-unblockSub_Flow" doc:id="32f1232d-4867-4764-879c-06b0e84a37d3" name="put-unblockSub_Flow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="85c26fc6-cf84-447e-83a7-4fd5cb740a4b" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import putunblockSubFlowactive::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	
		<munit:test name="put-unblockSub_Flow-updateError" doc:id="083e88d8-794a-4069-90b8-a3f4d38b7fe7" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Update" doc:id="5a3898ac-4443-41f7-9e6b-26f97cab177a" processor="db:update">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="f4857f49-cccd-4231-9af5-09a81b9a3c33" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					
					<munit-tools:error typeId="ANY" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://putunblockSubFlowsuccess\mock_variable_.dwl')]" />
						<munit-tools:variable key="unbPaylo" value="#[output application/java --- readUrl('classpath://putunblockSubFlowsuccess\mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="selInppay" value="#[output application/java --- readUrl('classpath://putunblockSubFlowsuccess\mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			
</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock Send" doc:id="f9801768-0e00-423b-a545-f2bec0b544cb" processor="email:send">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="8fa69ffc-3602-4d50-90d6-d5cdfcc3d308" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://putunblockSubFlowsuccess\mock_payload1.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://putunblockSubFlowsuccess\mock_variable_3.dwl')]" />
						<munit-tools:variable key="unbPaylo" value="#[output application/java --- readUrl('classpath://putunblockSubFlowsuccess\mock_variable_4.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="selInppay" value="#[output application/java --- readUrl('classpath://putunblockSubFlowsuccess\mock_variable_5.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock selInpPayFlowReference" doc:id="67851c6c-b569-4951-afb9-81384471c245" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="c50a7445-1353-4cb9-beb7-0dbded4a72ba" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://putunblockSubFlowsuccess\mock_payload2.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://putunblockSubFlowsuccess\mock_variable_6.dwl')]" />
						<munit-tools:variable key="unbPaylo" value="#[output application/java --- readUrl('classpath://putunblockSubFlowsuccess\mock_variable_7.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="selInppay" value="#[output application/java --- readUrl('classpath://putunblockSubFlowsuccess\mock_variable_8.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="5194f7c6-4bca-4747-aebe-1dd7fb04797f" >
				<munit:payload value="#[output application/json --- readUrl('classpath://putunblockSubFlowsuccess\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://putunblockSubFlowsuccess\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://putunblockSubFlowsuccess\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution>
			<try doc:name="Try" doc:id="5c70bea1-c837-45e4-8cce-55c3434d2f28" >
				<flow-ref doc:name="Flow-ref to put-unblockSub_Flow" doc:id="d4aa713b-1f81-4aaf-924f-611b40a0942c" name="put-unblockSub_Flow" />
				<error-handler >
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="2687739a-d610-4d4c-9971-5bc6e82da55f" >
						<logger level="INFO" doc:name="Logger" doc:id="c8f25d08-0852-4b34-b167-9dcf5a35520f" message="********continue******"/>
					</on-error-continue>
				</error-handler>
			</try>

		</munit:execution>
		<munit:validation>
			<munit-tools:assert-that doc:name="Assert that" doc:id="e1bea511-9ca1-41d5-bcaf-7adac70b28e7" is="#[MunitTools::equalTo(error.description)]" expression="#[error]"/>

		</munit:validation>
	
</munit:test>

	<munit:test name="put-unblockSub_Flow-emailError" doc:id="083e88d8-794a-4069-90b8-a3f4d38b7fe7" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Update" doc:id="5a3898ac-4443-41f7-9e6b-26f97cab177a" processor="db:update">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="f4857f49-cccd-4231-9af5-09a81b9a3c33" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://putunblockSubFlowsuccess\mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://putunblockSubFlowsuccess\mock_variable_.dwl')]" />
						<munit-tools:variable key="unbPaylo" value="#[output application/java --- readUrl('classpath://putunblockSubFlowsuccess\mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="selInppay" value="#[output application/java --- readUrl('classpath://putunblockSubFlowsuccess\mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock Send" doc:id="f9801768-0e00-423b-a545-f2bec0b544cb" processor="email:send">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="8fa69ffc-3602-4d50-90d6-d5cdfcc3d308" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					
					<munit-tools:error typeId="EMAIL:CONNECTIVITY" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://putunblockSubFlowsuccess\mock_variable_3.dwl')]" />
						<munit-tools:variable key="unbPaylo" value="#[output application/java --- readUrl('classpath://putunblockSubFlowsuccess\mock_variable_4.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="selInppay" value="#[output application/java --- readUrl('classpath://putunblockSubFlowsuccess\mock_variable_5.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			
</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock selInpPayFlowReference" doc:id="67851c6c-b569-4951-afb9-81384471c245" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="c50a7445-1353-4cb9-beb7-0dbded4a72ba" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://putunblockSubFlowsuccess\mock_payload2.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://putunblockSubFlowsuccess\mock_variable_6.dwl')]" />
						<munit-tools:variable key="unbPaylo" value="#[output application/java --- readUrl('classpath://putunblockSubFlowsuccess\mock_variable_7.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="selInppay" value="#[output application/java --- readUrl('classpath://putunblockSubFlowsuccess\mock_variable_8.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="5194f7c6-4bca-4747-aebe-1dd7fb04797f" >
				<munit:payload value="#[output application/json --- readUrl('classpath://putunblockSubFlowsuccess\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://putunblockSubFlowsuccess\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://putunblockSubFlowsuccess\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution>
			<try doc:name="Try" doc:id="28db5b84-ba2e-412d-927f-d9e1ac2a9e5a" >
				<flow-ref doc:name="Flow-ref to put-unblockSub_Flow" doc:id="d4aa713b-1f81-4aaf-924f-611b40a0942c" name="put-unblockSub_Flow" />
				<error-handler >
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="9a531269-25bf-4c4a-81de-9a3c19ead45e" >
						<logger level="INFO" doc:name="Logger" doc:id="d2494933-bf51-4de5-a72f-ffa219cc90ae" message="*******continue*******"/>
					</on-error-continue>
				</error-handler>
			</try>

		</munit:execution>
		<munit:validation>
			<munit-tools:assert-that doc:name="Assert that" doc:id="34740de0-cdbf-46a8-a561-11531bccb7fe" expression="#[error]" is="#[MunitTools::equalTo(error.description)]"/>

		</munit:validation>
	
</munit:test>


</mule>
