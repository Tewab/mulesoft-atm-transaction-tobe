<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="selectInPutParams-suite.xml" />
	<munit:test name="selectInPutParamsFlow-positive" doc:id="167de3cc-7401-4046-89bf-24311fcfea39" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Select" doc:id="fb97e340-9be2-4fac-8c57-7f0a22e9c6a3" processor="db:select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="4ee59f15-5830-4b23-bf89-134a66ede48d" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://selectInPutParamsFlowpositive\mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://selectInPutParamsFlowpositive\mock_variable_.dwl')]" />
						<munit-tools:variable key="atmPay" value="#[output application/java --- readUrl('classpath://selectInPutParamsFlowpositive\mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="atmQpar" value="#[output application/java --- readUrl('classpath://selectInPutParamsFlowpositive\mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="c2758f43-ef5f-46eb-bff4-169ddf323899" >
				<munit:payload value="#[output application/json --- readUrl('classpath://selectInPutParamsFlowpositive\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://selectInPutParamsFlowpositive\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://selectInPutParamsFlowpositive\set-event_variable_.dwl')]" />
					<munit:variable key="atmPay" value="#[output application/java --- readUrl('classpath://selectInPutParamsFlowpositive\set-event_variable_1.dwl')]" encoding="UTF-8" mediaType="application/java" />
					<munit:variable key="atmQpar" value="#[output application/java --- readUrl('classpath://selectInPutParamsFlowpositive\set-event_variable_2.dwl')]" encoding="UTF-8" mediaType="application/java" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to selectInPutParamsFlow" doc:id="51450d82-a6a7-4919-ba21-6ad77f34bad0" name="selectInPutParamsFlow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="bb8817f8-b07f-4eed-8893-dbb6330c9964" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import selectInPutParamsFlowpositive::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	
		<munit:test name="selectInPutParamsFlow-error" doc:id="167de3cc-7401-4046-89bf-24311fcfea39" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Select" doc:id="fb97e340-9be2-4fac-8c57-7f0a22e9c6a3" processor="db:select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="4ee59f15-5830-4b23-bf89-134a66ede48d" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					
					<munit-tools:error typeId="ANY" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://selectInPutParamsFlowpositive\mock_variable_.dwl')]" />
						<munit-tools:variable key="atmPay" value="#[output application/java --- readUrl('classpath://selectInPutParamsFlowpositive\mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="atmQpar" value="#[output application/java --- readUrl('classpath://selectInPutParamsFlowpositive\mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			
</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="c2758f43-ef5f-46eb-bff4-169ddf323899" >
				<munit:payload value="#[output application/json --- readUrl('classpath://selectInPutParamsFlowpositive\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://selectInPutParamsFlowpositive\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://selectInPutParamsFlowpositive\set-event_variable_.dwl')]" />
					<munit:variable key="atmPay" value="#[output application/java --- readUrl('classpath://selectInPutParamsFlowpositive\set-event_variable_1.dwl')]" encoding="UTF-8" mediaType="application/java" />
					<munit:variable key="atmQpar" value="#[output application/java --- readUrl('classpath://selectInPutParamsFlowpositive\set-event_variable_2.dwl')]" encoding="UTF-8" mediaType="application/java" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution>
			<try doc:name="Try" doc:id="f5a16b74-d47a-441e-9ded-c20895c6b9d8" >
				<flow-ref doc:name="Flow-ref to selectInPutParamsFlow" doc:id="51450d82-a6a7-4919-ba21-6ad77f34bad0" name="selectInPutParamsFlow" />
				<error-handler >
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="dce9e6b1-92b2-4a97-9ebd-9484153dc098" >
						<logger level="INFO" doc:name="Logger" doc:id="664c0e95-625c-4024-9fe9-8a4f26560a46" message="******continue*******"/>
					</on-error-continue>
				</error-handler>
			</try>

		</munit:execution>
		<munit:validation>
			<munit-tools:assert-that doc:name="Assert that" doc:id="11b730a0-4f7d-460d-89bd-4d4b46eb3f66" expression="#[error]" is="#[MunitTools::equalTo(error.description)]"/>

		</munit:validation>
	
</munit:test>


</mule>
